{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/BudgetSlider/BudgetSlider.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"label\": \"BudgetSlider-module__0ItECW__label\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/humoyun/Desktop/my-project/my-task/src/app/components/BudgetSlider/BudgetSlider.tsx"],"sourcesContent":["import { Input } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport styles from './BudgetSlider.module.css'\r\n\r\nexport default function BudgetSlider() {\r\n    const [sliderValue, setSliderValue] = useState<{ FromSlider: number; ToSlider: number }>({\r\n        FromSlider: 0,\r\n        ToSlider: 0\r\n    });\r\n\r\n    // Обработчик для изменения значений слайдера\r\n    const handleSliderChange = (value: number, type: 'FromSlider' | 'ToSlider') => {\r\n        setSliderValue((prev) => ({\r\n            ...prev,\r\n            [type]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label className={styles.label}>\r\n                Минимальный бюджет\r\n            </label>\r\n            <Input\r\n                type=\"number\"\r\n                min={0}\r\n                value={sliderValue.FromSlider}\r\n                onChange={(e) => handleSliderChange(Number(e.target.value), 'FromSlider')}\r\n            />\r\n            <label className={styles.label}>\r\n                Максимальный бюджет\r\n            </label>\r\n            <Input\r\n                type=\"number\"\r\n                min={0}\r\n                value={sliderValue.ToSlider}\r\n                onChange={(e) => handleSliderChange(Number(e.target.value), 'ToSlider')}\r\n            />\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;;AAIe,SAAS;IACpB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4C;QACrF,YAAY;QACZ,UAAU;IACd;IAEA,6CAA6C;IAC7C,MAAM,qBAAqB,CAAC,OAAe;QACvC,eAAe,CAAC,OAAS,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACZ,CAAC;IACL;IAEA,qBACI,8OAAC;;0BACG,8OAAC;gBAAM,WAAW,uKAAA,CAAA,UAAM,CAAC,KAAK;0BAAE;;;;;;0BAGhC,8OAAC,gLAAA,CAAA,QAAK;gBACF,MAAK;gBACL,KAAK;gBACL,OAAO,YAAY,UAAU;gBAC7B,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,MAAM,CAAC,KAAK,GAAG;;;;;;0BAEhE,8OAAC;gBAAM,WAAW,uKAAA,CAAA,UAAM,CAAC,KAAK;0BAAE;;;;;;0BAGhC,8OAAC,gLAAA,CAAA,QAAK;gBACF,MAAK;gBACL,KAAK;gBACL,OAAO,YAAY,QAAQ;gBAC3B,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,MAAM,CAAC,KAAK,GAAG;;;;;;;;;;;;AAI5E"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/TagInput/TagInput.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"label\": \"TagInput-module__U8c6pG__label\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/humoyun/Desktop/my-project/my-task/src/app/components/TagInput/TagInput.tsx"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Input, InputRef, Tag, theme } from \"antd\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport styles from './TagInput.module.css'\r\n\r\nexport default function TagInput() {\r\n    const { token } = theme.useToken();\r\n    const [tags, setTags] = useState<string[]>([]);\r\n    const [inputVisible, setInputVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const inputRef = useRef<InputRef>(null);\r\n\r\n    const handleClose = (removedTag: string) => {\r\n        const newTags = tags.filter((tag) => tag !== removedTag);\r\n        setTags(newTags);\r\n    };\r\n\r\n    const showInput = () => {\r\n        setInputVisible(true);\r\n    };\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleInputConfirm = () => {\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            setTags([...tags, inputValue]);\r\n        }\r\n        setInputVisible(false);\r\n        setInputValue('');\r\n    };\r\n\r\n    const forMap = (tag: string) => (\r\n        <span key={tag} style={{ display: 'inline-block' }}>\r\n            <Tag\r\n                closable\r\n                onClose={(e) => {\r\n                    e.preventDefault();\r\n                    handleClose(tag);\r\n                }}\r\n            >\r\n                {tag}\r\n            </Tag>\r\n        </span>\r\n    );\r\n\r\n    const tagPlusStyle: React.CSSProperties = {\r\n        background: token.colorBgContainer,\r\n        borderStyle: 'dashed',\r\n    };\r\n\r\n    // Для автоподсказок\r\n    useEffect(() => {\r\n        if (inputVisible) {\r\n            inputRef.current?.focus();\r\n        }\r\n    }, [inputVisible]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span className={styles.label}>Добавить теги</span>\r\n            </div>\r\n            {tags.map(forMap)}\r\n            {inputVisible ? (\r\n                <Input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    style={{ width: 78 }}\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleInputConfirm}\r\n                    onPressEnter={handleInputConfirm}\r\n                />\r\n            ) : (\r\n                <Tag onClick={showInput} style={tagPlusStyle}>\r\n                    <PlusOutlined /> Добавить\r\n                </Tag>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAFA;AAAA;AADA;AACA;;;;;;AAIe,SAAS;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,gLAAA,CAAA,QAAK,CAAC,QAAQ;IAChC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAY;IAElC,MAAM,cAAc,CAAC;QACjB,MAAM,UAAU,KAAK,MAAM,CAAC,CAAC,MAAQ,QAAQ;QAC7C,QAAQ;IACZ;IAEA,MAAM,YAAY;QACd,gBAAgB;IACpB;IAEA,MAAM,oBAAoB,CAAC;QACvB,cAAc,EAAE,MAAM,CAAC,KAAK;IAChC;IAEA,MAAM,qBAAqB;QACvB,IAAI,cAAc,KAAK,OAAO,CAAC,gBAAgB,CAAC,GAAG;YAC/C,QAAQ;mBAAI;gBAAM;aAAW;QACjC;QACA,gBAAgB;QAChB,cAAc;IAClB;IAEA,MAAM,SAAS,CAAC,oBACZ,8OAAC;YAAe,OAAO;gBAAE,SAAS;YAAe;sBAC7C,cAAA,8OAAC,4KAAA,CAAA,MAAG;gBACA,QAAQ;gBACR,SAAS,CAAC;oBACN,EAAE,cAAc;oBAChB,YAAY;gBAChB;0BAEC;;;;;;WARE;;;;;IAaf,MAAM,eAAoC;QACtC,YAAY,MAAM,gBAAgB;QAClC,aAAa;IACjB;IAEA,oBAAoB;IACpB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,cAAc;YACd,SAAS,OAAO,EAAE;QACtB;IACJ,GAAG;QAAC;KAAa;IAEjB,qBACI,8OAAC;;0BACG,8OAAC;0BACG,cAAA,8OAAC;oBAAK,WAAW,+JAAA,CAAA,UAAM,CAAC,KAAK;8BAAE;;;;;;;;;;;YAElC,KAAK,GAAG,CAAC;YACT,6BACG,8OAAC,gLAAA,CAAA,QAAK;gBACF,KAAK;gBACL,MAAK;gBACL,MAAK;gBACL,OAAO;oBAAE,OAAO;gBAAG;gBACnB,OAAO;gBACP,UAAU;gBACV,QAAQ;gBACR,cAAc;;;;;qCAGlB,8OAAC,4KAAA,CAAA,MAAG;gBAAC,SAAS;gBAAW,OAAO;;kCAC5B,8OAAC,kNAAA,CAAA,eAAY;;;;;oBAAG;;;;;;;;;;;;;AAKpC"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/Deadline/Deadline.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"label\": \"Deadline-module__A-GAha__label\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/humoyun/Desktop/my-project/my-task/src/app/components/Deadline/DeadlineInput.tsx"],"sourcesContent":["import { Input } from \"antd\";\r\nimport styles from './Deadline.module.css'\r\n\r\nexport default function DeadLineInput() {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"taskDeadline\" className={styles.label}>Срок в днях</label>\r\n            <Input id=\"taskDeadline\" type=\"number\" defaultValue={1} className=\"w-full mb-3\" />\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AACA;AADA;;;;AAGe,SAAS;IACpB,qBACI,8OAAC;;0BACG,8OAAC;gBAAM,SAAQ;gBAAe,WAAW,+JAAA,CAAA,UAAM,CAAC,KAAK;0BAAE;;;;;;0BACvD,8OAAC,gLAAA,CAAA,QAAK;gBAAC,IAAG;gBAAe,MAAK;gBAAS,cAAc;gBAAG,WAAU;;;;;;;;;;;;AAG9E"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/RemindersInput/Remainder.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"label\": \"Remainder-module__ngJJJW__label\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/humoyun/Desktop/my-project/my-task/src/app/components/RemindersInput/RemindersInput.tsx"],"sourcesContent":["import { InputNumber } from \"antd\";\r\nimport styles from \"./Remainder.module.css\";\r\n\r\nexport default function ReminedersInput() {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"reminders\" className={styles.label}>Количество напоминаний</label>\r\n            <InputNumber id=\"reminders\" defaultValue={1} className=\"w-full mb-3\" />\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AACA;AADA;;;;AAGe,SAAS;IACpB,qBACI,8OAAC;;0BACG,8OAAC;gBAAM,SAAQ;gBAAY,WAAW,sKAAA,CAAA,UAAM,CAAC,KAAK;0BAAE;;;;;;0BACpD,8OAAC,gMAAA,CAAA,cAAW;gBAAC,IAAG;gBAAY,cAAc;gBAAG,WAAU;;;;;;;;;;;;AAGnE"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/AutoResponsesCheckbox/AutoResponcses.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"container\": \"AutoResponcses-module__8G5kxq__container\",\n  \"label\": \"AutoResponcses-module__8G5kxq__label\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/humoyun/Desktop/my-project/my-task/src/app/components/AutoResponsesCheckbox/AutoResponsesCheckbox.tsx"],"sourcesContent":["import { Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./AutoResponcses.module.css\"\r\n\r\nexport default function AutoResponsesCheckbox() {\r\n    const [autoResponses, setAutoResponses] = useState(false);\r\n    return (\r\n        <div className={styles.container}>\r\n            <Checkbox\r\n                id=\"allAutoResponses\"\r\n                checked={autoResponses}\r\n                onChange={(e) => setAutoResponses(e.target.checked)}\r\n            />\r\n            <label\r\n                htmlFor=\"allAutoResponses\"\r\n                className={styles.label}\r\n            >\r\n                Включить автоматические ответы\r\n            </label>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;;AAIe,SAAS;IACpB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,qBACI,8OAAC;QAAI,WAAW,kLAAA,CAAA,UAAM,CAAC,SAAS;;0BAC5B,8OAAC,sLAAA,CAAA,WAAQ;gBACL,IAAG;gBACH,SAAS;gBACT,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,OAAO;;;;;;0BAEtD,8OAAC;gBACG,SAAQ;gBACR,WAAW,kLAAA,CAAA,UAAM,CAAC,KAAK;0BAC1B;;;;;;;;;;;;AAKb"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/humoyun/Desktop/my-project/my-task/src/app/form/Form.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Checkbox, Input, InputNumber } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport BudgetSlider from \"../components/BudgetSlider/BudgetSlider\";\r\nimport TagInput from \"../components/TagInput/TagInput\";\r\nimport DeadLineInput from \"../components/Deadline/DeadlineInput\";\r\nimport ReminedersInput from \"../components/RemindersInput/RemindersInput\";\r\nimport AutoResponsesCheckbox from \"../components/AutoResponsesCheckbox/AutoResponsesCheckbox\";\r\n\r\nexport default function Form() {\r\n\r\n    return (\r\n        <form className=\"max-w-md mx-auto p-4 bg-white shadow rounded-lg\">\r\n            <h2 className=\"text-lg text-cyan-700 font-semibold mb-4\">Создать задачу</h2>\r\n\r\n            {/* Название задачи */}\r\n            <label htmlFor=\"taskTitle\" className=\"block text-sm text-cyan-700 mb-1\">Название задачи</label>\r\n            <Input id=\"taskTitle\" className=\"w-full mb-3\" placeholder=\"Введите название\" />\r\n\r\n            {/* Описание задачи */}\r\n            <label htmlFor=\"taskDesc\" className=\"block text-sm text-cyan-700 mb-1\">Описание</label>\r\n            <Input id=\"taskDesc\" className=\"w-full mb-3\" placeholder=\"Введите описание\" />\r\n\r\n            {/* Добавление тегов */}\r\n            <TagInput />\r\n\r\n            {/* Слайдер бюджета */}\r\n            <BudgetSlider />\r\n\r\n            {/* Срок в днях */}\r\n            <DeadLineInput />\r\n\r\n            {/* Количество напоминаний */}\r\n            <ReminedersInput />\r\n\r\n            {/* Чекбокс автоматических ответов */}\r\n            <AutoResponsesCheckbox />\r\n\r\n            {/* Кнопка отправки */}\r\n            <button className=\"mt-4 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 transition\">\r\n                Отправить\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AANA;AAFA;;;;;;;;AAUe,SAAS;IAEpB,qBACI,8OAAC;QAAK,WAAU;;0BACZ,8OAAC;gBAAG,WAAU;0BAA2C;;;;;;0BAGzD,8OAAC;gBAAM,SAAQ;gBAAY,WAAU;0BAAmC;;;;;;0BACxE,8OAAC,gLAAA,CAAA,QAAK;gBAAC,IAAG;gBAAY,WAAU;gBAAc,aAAY;;;;;;0BAG1D,8OAAC;gBAAM,SAAQ;gBAAW,WAAU;0BAAmC;;;;;;0BACvE,8OAAC,gLAAA,CAAA,QAAK;gBAAC,IAAG;gBAAW,WAAU;gBAAc,aAAY;;;;;;0BAGzD,8OAAC,iJAAA,CAAA,UAAQ;;;;;0BAGT,8OAAC,yJAAA,CAAA,UAAY;;;;;0BAGb,8OAAC,sJAAA,CAAA,UAAa;;;;;0BAGd,8OAAC,6JAAA,CAAA,UAAe;;;;;0BAGhB,8OAAC,2KAAA,CAAA,UAAqB;;;;;0BAGtB,8OAAC;gBAAO,WAAU;0BAA+E;;;;;;;;;;;;AAK7G"}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}